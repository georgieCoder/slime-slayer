{"version":3,"file":"js/537.ae3ef398.chunk.js","mappings":"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","sources":["webpack://slime-slayer/./src/components/InformationPanel/CustomScrollbar.tsx","webpack://slime-slayer/./src/components/InformationPanel/posts/ModalContent.tsx","webpack://slime-slayer/./src/components/InformationPanel/index.tsx","webpack://slime-slayer/./src/components/InformationPanel/posts/HelloPost.tsx","webpack://slime-slayer/./src/components/InformationPanel/posts/Version054Post.tsx","webpack://slime-slayer/./src/components/InformationPanel/posts/CreditsPost.tsx","webpack://slime-slayer/./src/stores/gameStore.ts","webpack://slime-slayer/./src/components/MainMenu/index.tsx","webpack://slime-slayer/./src/components/Loader/index.tsx","webpack://slime-slayer/./src/hooks/useMainEvents.ts","webpack://slime-slayer/./src/components/UI/PopupText/index.tsx","webpack://slime-slayer/./src/hooks/usePopup.tsx","webpack://slime-slayer/./src/components/UI/Panel/index.tsx","webpack://slime-slayer/./src/components/gameOverlays/overlays/GameOverScreen/index.tsx","webpack://slime-slayer/./src/components/gameOverlays/overlays/PauseScreen/index.tsx","webpack://slime-slayer/./src/components/gameOverlays/overlays/ScoreSystem/index.tsx","webpack://slime-slayer/./src/components/gameOverlays/overlays/StartScreenHint/index.tsx","webpack://slime-slayer/./src/utils/math.ts","webpack://slime-slayer/./src/components/gameOverlays/overlays/GameEventsVisualizer/index.tsx","webpack://slime-slayer/./src/components/gameOverlays/overlays/VictoryScreen/index.tsx","webpack://slime-slayer/./src/components/gameOverlays/overlays/WaveSystem/index.tsx","webpack://slime-slayer/./src/components/gameOverlays/index.tsx","webpack://slime-slayer/./src/App.tsx","webpack://slime-slayer/./src/hooks/useGameEvents.ts","webpack://slime-slayer/./src/hooks/useInputHandlers.ts","webpack://slime-slayer/./src/hooks/useResizeObserver.ts","webpack://slime-slayer/./src/main.tsx","webpack://slime-slayer/./src/MainEvents.ts","webpack://slime-slayer/./src/GameEvents.ts"],"sourcesContent":["import { useCallback, useEffect, useRef, useState } from 'react'\r\n\r\ninterface ICustomScrollbarProps {\r\n    contentRef: React.RefObject<HTMLDivElement | null>;\r\n}\r\n\r\nexport const CustomScrollbar = ({ contentRef }: ICustomScrollbarProps) => {\r\n    const sliderRef = useRef<HTMLDivElement>(null)\r\n    const sliderContainerRef = useRef<HTMLDivElement>(null)\r\n    const [isDragging, setIsDragging] = useState(false)\r\n    const [startY, setStartY] = useState(0)\r\n    const [sliderTop, setSliderTop] = useState(0)\r\n    const canScroll = useRef(false);\r\n\r\n    const handleMouseDown = (e: React.MouseEvent) => {\r\n        e.preventDefault()\r\n        setIsDragging(true)\r\n        setStartY(e.clientY - (sliderRef.current?.getBoundingClientRect().top || 0))\r\n    }\r\n\r\n    const updateScrollbar = () => {\r\n        if (!contentRef.current || !sliderContainerRef.current || !sliderRef.current || !canScroll.current) return\r\n        \r\n        const content = contentRef.current\r\n        const container = sliderContainerRef.current\r\n        const maxTop = container.clientHeight - sliderRef.current.clientHeight\r\n        \r\n        const scrollRatio = content.scrollTop / (content.scrollHeight - content.clientHeight)\r\n        const newTop = scrollRatio * maxTop || 0\r\n        setSliderTop(newTop)\r\n        if (sliderRef.current) sliderRef.current.style.top = `${newTop}px`\r\n    }\r\n\r\n    useEffect(() => {\r\n        updateScrollbar()\r\n    }, [contentRef.current?.scrollTop])\r\n\r\n    useEffect(() => {\r\n        if (contentRef.current === null || sliderContainerRef.current === null) return;\r\n        console.log(contentRef.current.scrollHeight, sliderContainerRef.current.clientHeight)\r\n        canScroll.current = contentRef.current.scrollHeight > sliderContainerRef.current.clientHeight\r\n    }, [contentRef.current?.scrollHeight, sliderContainerRef.current?.clientHeight])\r\n\r\n    useEffect(() => {\r\n        const handleMouseMove = (e: MouseEvent) => {\r\n            if (!isDragging || !sliderRef.current || !sliderContainerRef.current || !contentRef.current) return;\r\n            \r\n            const container = sliderContainerRef.current\r\n            const content = contentRef.current\r\n            \r\n            let newTop = e.clientY - container.getBoundingClientRect().top - startY\r\n            const maxTop = container.clientHeight - sliderRef.current.clientHeight\r\n            newTop = Math.max(0, Math.min(newTop, maxTop))\r\n            \r\n            if (sliderRef.current) sliderRef.current.style.top = `${newTop}px`\r\n            \r\n            const scrollRatio = newTop / maxTop\r\n            content.scrollTop = scrollRatio * (content.scrollHeight - content.clientHeight)\r\n        }\r\n\r\n        const handleMouseUp = () => {\r\n            setIsDragging(false)\r\n        }\r\n\r\n        if (isDragging && canScroll.current) {\r\n            document.addEventListener('mousemove', handleMouseMove)\r\n            document.addEventListener('mouseup', handleMouseUp)\r\n        }\r\n\r\n        return () => {\r\n            document.removeEventListener('mousemove', handleMouseMove)\r\n            document.removeEventListener('mouseup', handleMouseUp)\r\n        }\r\n    }, [isDragging, startY, contentRef, canScroll])\r\n\r\n    useEffect(() => {\r\n        console.log('subscribe to scoll', canScroll.current, contentRef.current)\r\n        canScroll.current && contentRef.current?.addEventListener('scroll', updateScrollbar)\r\n        return () => {\r\n            console.log('unsubscribe to scroll')\r\n            contentRef.current?.removeEventListener('scroll', updateScrollbar)\r\n        }\r\n    }, [contentRef, canScroll])\r\n\r\n    return (\r\n        <div ref={sliderContainerRef} className=\"information-panel_slider-container\">\r\n            <div \r\n                ref={sliderRef}\r\n                className=\"information-panel_slider slider image\"\r\n                onMouseDown={handleMouseDown}\r\n                style={{ top: `${sliderTop}px` }}\r\n            />\r\n        </div>\r\n    )\r\n}","import { ReactNode } from 'react'\r\n\r\ninterface IModalContentProps {\r\n    title: string;\r\n    children: ReactNode;\r\n    onBack: () => void;\r\n}\r\n\r\nexport const ModalContent = ({ title, children, onBack }: IModalContentProps) => {\r\n    return (\r\n        <div className=\"modal-content\">\r\n            <button onClick={onBack} className=\"modal-back-btn\">\r\n                <svg className=\"image svg_clickable svg_clickable__dark\" viewBox=\"0 0 512 512\"><path d=\"M320 149.5V192H21v128h299v85h43v-42h42v-43h43v-43h43v-42h-43v-43h-43v-43h-42v-42h-43v42.5z\"/></svg>\r\n            </button>\r\n            <h2 className=\"modal-title\">{title}</h2>\r\n            <div className=\"modal-body\">\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import './style.css'\r\nimport { useRef, useState } from 'react'\r\nimport { CustomScrollbar } from './CustomScrollbar';\r\nimport { CreditsPost, HelloPost, Version054Post } from './posts';\r\n\r\ninterface IInformationPanelProps {\r\n    visible: boolean, \r\n    setVisible: React.Dispatch<React.SetStateAction<boolean>>\r\n}\r\n\r\nenum Post {\r\n    hello,\r\n    version054,\r\n    credits\r\n}\r\n\r\nconst postComponents = {\r\n    [Post.hello]: HelloPost,\r\n    [Post.version054]: Version054Post,\r\n    [Post.credits]: CreditsPost\r\n};\r\n\r\nconst menuItems = [\r\n    { id: Post.hello, title: \"Привет!\" },\r\n    { id: Post.version054, title: \"v0.5.4\" },\r\n    { id: Post.credits, title: \"Credits\" }\r\n];\r\n\r\nexport const InformationPanel: React.FC<IInformationPanelProps> = ({ visible, setVisible }) => {\r\n    const contentRef = useRef<HTMLDivElement>(null)\r\n    const [currentPost, setCurrentPost] = useState<Post | null>(null)\r\n\r\n    if (!visible) return null\r\n\r\n    return (\r\n        <div className=\"information-panel icon\">\r\n            <div className=\"information-panel_inner\">\r\n                <div className=\"information-panel_header icon\"></div>\r\n                <CustomScrollbar contentRef={contentRef} />\r\n                <button onClick={() => setVisible(false)} className=\"information-panel_close-btn close-btn icon\"></button>\r\n                <div className=\"information-panel_inner-container\">\r\n                    <div \r\n                        ref={contentRef} \r\n                        className=\"information-panel_content\"\r\n                    >\r\n                        {\r\n                        currentPost === null \r\n                        ? \r\n                            (\r\n                                <div className=\"menu-items\">\r\n                                    {menuItems.map((item) => (\r\n                                        <h2 \r\n                                            key={item.id}\r\n                                            className=\"menu-item\"\r\n                                            onClick={() => {setCurrentPost(item.id); if (contentRef.current) {\r\n                                            console.log('set 0 scroll')\r\n                                            contentRef.current.scrollTop = 0\r\n                                        }}}\r\n                                        >\r\n                                            {item.title}\r\n                                        </h2>\r\n                                    ))}\r\n                                </div>\r\n                            ) \r\n                            : \r\n                            (\r\n                                (() => {\r\n                                    const PostComponent = postComponents[currentPost];\r\n                                    return <PostComponent onBack={() => { \r\n                                        setCurrentPost(null);\r\n                                        if (contentRef.current) {\r\n                                            console.log('set 0 scroll')\r\n                                            contentRef.current.scrollTop = 0\r\n                                        }\r\n                                    }} />;\r\n                                })()\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { ModalContent } from \"./ModalContent\"\r\n\r\nexport const HelloPost: React.FC<{ onBack: () => void }> = ({ onBack }) => {\r\n    return (\r\n        <ModalContent title=\"Привет!\" onBack={onBack}>\r\n            <>\r\n                <p>\r\n                    Это наша первая игра, где вам нужно сражаться со слаймами, чтобы набрать как можно больше очков. Это не финальная версия, и в следующем обновлении мы планируем добавить:\r\n                </p>\r\n                <ul>\r\n                    <li>Лидерборд (игроки с наибольшим количеством очков попадут в таблицу лидеров);</li>\r\n                    <li>Улучшение графики (добавление теней для слаймов и т. д.);</li>\r\n                    <li>Добавление бесконечного режима для набора ещё большего количества очков.</li>\r\n                </ul>\r\n                <p>Мы очень старались и надеемся, что вам понравится! Пока игра не идеальна, и если вы обнаружили баги, хотите предложить идеи по улучшению игры или будущего контента - присылайте их на почту: ascaredgeorgy@yandex.ru или в Telegram: @ropasopa.</p>\r\n                <p>По коммерческим вопросам пишите сюда: <a href=\"https://vk.com/anasteyshanora\" target=\"_blank\">https://vk.com/anasteyshanora</a></p>\r\n            </>\r\n        </ModalContent>\r\n    )\r\n}","import { ModalContent } from \"./ModalContent\"\r\n\r\nexport const Version054Post: React.FC<{ onBack: () => void }> = ({ onBack }) => {\r\n    return (\r\n        <ModalContent title=\"v0.5.4\" onBack={onBack}>\r\n            <>\r\n                <p>В новой версии мы добавили:</p>\r\n                <ul>\r\n                    <li>Новые виды слаймов с уникальными способностями</li>\r\n                    <li>Систему прокачки персонажа</li>\r\n                    <li>Дополнительные уровни сложности</li>\r\n                </ul>\r\n                <p>Также исправлены основные баги предыдущей версии и улучшена производительность.</p>\r\n            </>\r\n        </ModalContent>\r\n    )\r\n}","import { ModalContent } from \"./ModalContent\"\r\n\r\nexport const CreditsPost: React.FC<{ onBack: () => void }> = ({ onBack }) => {\r\n    return (\r\n        <ModalContent title=\"Credits\" onBack={onBack}>\r\n            <>\r\n                <ul>\r\n                    <li>Программирование - @ropasopa</li>\r\n                    <li>Анимация - <a href=\"https://vk.com/piskamiskasosiska\" target='_blank'>https://vk.com/piskamiskasosiska</a></li>\r\n                    <li>Визуал - <a href=\"https://vk.com/club173775696\" target='_blank'>https://vk.com/club173775696</a></li>\r\n                </ul>\r\n                <p style={{marginTop: '6%'}}>(комментарий программиста)</p> \r\n                <p>расширение лучше открывать в новой вкладке - интерфейс адаптивный и растянется на всю высоту страницы</p>\r\n            </>\r\n        </ModalContent>\r\n    )\r\n}","import { Game } from 'phaser';\r\nimport { create } from 'zustand';\r\n\r\ninterface GameState {\r\n  gameStarted: boolean;\r\n  showLoader: boolean;\r\n  showMainMenu: boolean;\r\n  victory: boolean;\r\n  waveCount: number;\r\n  pause: boolean;\r\n  gameOver: boolean;\r\n  startPlaying: boolean;\r\n  currentWave: number;\r\n  score: number;\r\n  gameInstance: Game | null;\r\n  descriptionChecked: boolean;\r\n  \r\n  resetGameState: () => void;\r\n  setScore: (score: number) => void;\r\n}\r\n\r\nexport const useGameStore = create<GameState>((set) => ({\r\n  gameStarted: false,\r\n  showLoader: false,\r\n  showMainMenu: true,\r\n  victory: false,\r\n  waveCount: 0,\r\n  pause: false,\r\n  gameOver: false,\r\n  startPlaying: false,\r\n  currentWave: 0,\r\n  score: 0,\r\n  gameInstance: null,\r\n  descriptionChecked: true,\r\n\r\n  resetGameState: () => set({\r\n    victory: false,\r\n    gameOver: false,\r\n    pause: false,\r\n    startPlaying: false,\r\n    currentWave: 0,\r\n    score: 0\r\n  }),\r\n\r\n  setScore: (score) => set({ score }),\r\n}));","import React, { useRef, useState } from 'react';\r\nimport { mainEvents } from '@/MainEvents';\r\nimport './style.css'\r\n\r\nimport { InformationPanel } from '../InformationPanel';\r\nimport { useGameStore } from '@/stores';\r\n\r\nexport const MainMenu: React.FC<{}> = () => {\r\n  const descriptionChecked = useGameStore(store => store.descriptionChecked);\r\n  const [informationVisible, setInformationVisible] = useState(false);\r\n  const [sleepingSlimeStatus, setSleepingSlimeStatus] = useState<0 | 1 | 2>(0);\r\n  const playButtonRef = useRef<HTMLButtonElement | null>(null);\r\n  const playButtonSVGRef = useRef<SVGSVGElement | null>(null);\r\n  const playButtonClicked = useRef<boolean>(false);\r\n\r\n  const onPlayClick = () => {\r\n    if (!playButtonClicked.current) {\r\n        if (playButtonRef.current) playButtonRef.current.disabled = true;\r\n        playButtonSVGRef.current?.classList.remove('svg_clickable');\r\n        playButtonClicked.current = true;\r\n\r\n        setSleepingSlimeStatus(1);\r\n\r\n        setTimeout(() => {\r\n          setSleepingSlimeStatus(2)\r\n          setTimeout(() => {\r\n              mainEvents.emit('START_LOADING')\r\n          }, 500)\r\n        }, 750);\r\n    }\r\n  }\r\n\r\n  const onAboutButtonClick = () => {\r\n    setInformationVisible(prev => !prev);\r\n    if (!descriptionChecked) {\r\n      localStorage.setItem('description-checked', JSON.stringify(true));\r\n      useGameStore.setState({ descriptionChecked: true })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"main-screen\">\r\n      <div className=\"main-screen_background image\"></div>\r\n      <div \r\n        onClick={onAboutButtonClick} \r\n        className=\"main-screen_about question-sign icon\"\r\n      >\r\n      </div>\r\n      {!descriptionChecked && <span id='new-description-label'>new!</span>}\r\n      <div className=\"main-screen_play-btn play-btn\">\r\n        <button ref={playButtonRef} className=\"play-btn_text \" onClick={onPlayClick}>\r\n          <svg ref={playButtonSVGRef} className=\"image svg_clickable\" viewBox=\"0 0 112.93 22.78\">\r\n                <path className=\"st0\" d=\"M18.47,0.04v22.78h-5.64v-9.58h-1.65v1.95H9.47v1.79H7.56v2H5.64v3.8H0V0h5.64v9.53h1.92v-2h1.71V5.75h1.91\r\n                    V3.79h1.65V0.04H18.47z M21.83,0v22.78h5.64V5.64h8.07V0H21.83z M54.07,1.83v9.56h-1.92v1.85h-3.73v1.95h-5.75v7.59h-5.65V0h13.36\r\n                    v1.83H54.07z M49.27,4.66h-6.6v5.81h3.89V9.51h1.86v-1h0.85V4.66z M61.57,16.92v3.93h0.1v-3.93H61.57z M76.82,17.08v5.7h-5.69v-1.93\r\n                    h-1.86v-3.93h-7.7v3.93h-1.81v1.93h-5.69v-5.7h1.91v-3.84h1.98v-5.7h1.75V3.75h1.86V0.03h7.7v1.8h1.86v5.79h1.91v3.93h1.92v5.53\r\n                    H76.82z M68.25,12.26V7.62H67.4V4.69h-2.91v1.92h-0.85v3.86h0.85v1.79H68.25z M112.93,11.39v7.54H111v1.92h-1.91v1.93H95.87V0h5.65\r\n                    v7.62h7.57v1.84H111v1.93H112.93z M105.37,17.92V16.2h1.91v-3.93h-5.76v5.65H105.37z M76.82,0v5.66h5.69v17.12h5.65V5.66h5.82V0\r\n                    H76.82z\"\r\n                />\r\n          </svg>\r\n        </button>\r\n        <div className=\"play-btn_slime\">\r\n          {sleepingSlimeStatus === 0 && <div className=\"image sleeping-slime_sleep\"></div>}\r\n          {sleepingSlimeStatus === 1 && <div className=\"image sleeping-slime_awake\"></div>}\r\n          {sleepingSlimeStatus === 2 && <div className=\"image sleeping-slime_awaken\"></div>}\r\n        </div>\r\n      </div>\r\n      <InformationPanel visible={informationVisible} setVisible={setInformationVisible} />\r\n    </div>\r\n  );\r\n};","import React, { useEffect, useRef, useState } from 'react';\r\nimport './style.css';\r\nimport { mainEvents } from '@/MainEvents';\r\nimport { gameEvents } from '@/GameEvents';\r\nimport { preloadResources } from '@/utils/preload';\r\n\r\nimport tutorial from '@/assets/game_overlays/tutorial.webp';\r\nimport victoryLabel from '@/assets/game_overlays/victory-text.webp';\r\n\r\nexport const Loader: React.FC = () => {\r\n  const loaderRef = useRef<HTMLDivElement | null>(null);\r\n  const barRef = useRef<HTMLDivElement | null>(null);\r\n  const slimeRef = useRef<HTMLDivElement | null>(null);\r\n  const smokeRef = useRef<HTMLDivElement | null>(null);\r\n  const [displayProgress, setDisplayProgress] = useState<number>(0);\r\n  const [realProgress, setRealProgress] = useState<number>(0);\r\n  const animationRef = useRef<number>(0);\r\n  const startTimeRef = useRef<number>(0);\r\n  const [assetsLoaded, setAssetsLoaded] = useState(false);\r\n  const [gameLoaded, setGameLoaded] = useState(false);\r\n  const [maxTranslate, setMaxTranslate] = useState(162);\r\n  const minimumDuration = 1500;\r\n\r\n  useEffect(() => {\r\n    const updateMaxTranslate = () => {\r\n      if (!loaderRef.current) return;\r\n      const newMaxTranslate = loaderRef.current.clientWidth * 0.52;\r\n      setMaxTranslate(newMaxTranslate);\r\n    };\r\n\r\n    updateMaxTranslate();\r\n    window.addEventListener('resize', updateMaxTranslate);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', updateMaxTranslate);\r\n    };\r\n  }, [loaderRef]);\r\n\r\n  useEffect(() => {\r\n    if (gameLoaded && assetsLoaded) {\r\n      const elapsed = Date.now() - startTimeRef.current;\r\n      const remainingTime = Math.max(0, minimumDuration - elapsed);\r\n      \r\n      setTimeout(() => {\r\n        loaderRef.current?.classList.remove('visible');\r\n        mainEvents.emit('STOP_LOADING');\r\n      }, remainingTime);\r\n    }\r\n  }, [gameLoaded, assetsLoaded]);\r\n\r\n  useEffect(() => {\r\n    loaderRef.current?.classList.add('visible');\r\n    startTimeRef.current = Date.now();\r\n    return () => {\r\n      if (animationRef.current) {\r\n        cancelAnimationFrame(animationRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const animateProgress = () => {\r\n      const elapsed = Date.now() - startTimeRef.current;\r\n      const progressRatio = Math.min(elapsed / minimumDuration, 1);\r\n\r\n      const targetProgress = Math.min(realProgress, 1);\r\n      const smoothProgress = displayProgress + (targetProgress - displayProgress) * 0.1;\r\n\r\n      const combinedProgress = Math.max(\r\n        progressRatio * 0.3,\r\n        smoothProgress\r\n      );\r\n      \r\n      const currentProgress = Math.min(combinedProgress, 1);\r\n      setDisplayProgress(currentProgress);\r\n\r\n      const translateX = currentProgress * maxTranslate;\r\n\r\n      if (barRef.current) {\r\n        barRef.current.style.transform = `translateX(${translateX}px)`;\r\n      }\r\n      if (slimeRef.current) {\r\n        slimeRef.current.style.transform = `translateX(${translateX}px)`;\r\n      }\r\n      if (smokeRef.current) {\r\n        smokeRef.current.style.transform = `translateX(${translateX}px)`;\r\n      }\r\n\r\n      if (currentProgress < 1 || elapsed < minimumDuration) {\r\n        animationRef.current = requestAnimationFrame(animateProgress);\r\n      }\r\n    };\r\n\r\n    animationRef.current = requestAnimationFrame(animateProgress);\r\n    return () => {\r\n      if (animationRef.current) {\r\n        cancelAnimationFrame(animationRef.current);\r\n      }\r\n    };\r\n  }, [realProgress, displayProgress, maxTranslate]);\r\n\r\n  useEffect(() => {\r\n    const onLoadProgressEvent = (progress: number) => {\r\n      setRealProgress(progress);\r\n    };\r\n    \r\n    const onGameStartedEvent = () => {\r\n      setRealProgress(1);\r\n      setGameLoaded(true);\r\n    };\r\n\r\n    const preloadAssets = async () => {\r\n        try {\r\n          await preloadResources(\r\n            [ \r\n              tutorial,\r\n              victoryLabel\r\n            ], \r\n            'image'\r\n          );\r\n          setAssetsLoaded(true);\r\n        } catch (error) {\r\n          console.error('Preloading failed:', error);\r\n          setAssetsLoaded(false);\r\n        }\r\n    };\r\n\r\n    preloadAssets();\r\n\r\n    gameEvents.on('LOAD_PROGRESS', onLoadProgressEvent);\r\n    gameEvents.on('GAME_STARTED', onGameStartedEvent);\r\n\r\n    return () => {\r\n      gameEvents.off('LOAD_PROGRESS', onLoadProgressEvent);\r\n      gameEvents.off('GAME_STARTED', onGameStartedEvent);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"loader image overlay\" ref={loaderRef}>\r\n      <div className=\"loader_loading-bar\">\r\n        <div className=\"loader_loading-bar__content\">\r\n          <div className=\"loader_loading-bar__bar image\" ref={barRef}></div>\r\n        </div>\r\n        <div className=\"loader_loading-bar__frame image\"></div>\r\n        <div className=\"loader_loading-bar__slime\" ref={slimeRef}>\r\n          <div className=\"icon yellow-slime\"></div>\r\n        </div>\r\n        <div className=\"loader_loading-bar__smoke\" ref={smokeRef}>\r\n          <div className=\"icon white-smoke\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};","import { useEffect } from 'react';\r\nimport { mainEvents } from '@/MainEvents';\r\nimport { useGameStore } from '@/stores/gameStore';\r\n\r\nexport const useMainEvents = () => {\r\n  useEffect(() => {\r\n    const onStartLoading = async () => {\r\n      useGameStore.setState({ showLoader: true });\r\n      setTimeout(() => useGameStore.setState({ showMainMenu: false }), 1000);\r\n      await import('phaser');\r\n      const { initGame } = await import('@/game/game');\r\n      const game = initGame();\r\n      useGameStore.setState({ gameInstance: game })\r\n    };\r\n\r\n    const onStopLoading = () => useGameStore.setState({ showLoader: false });\r\n    const onRestart = () => useGameStore.getState().resetGameState();\r\n\r\n    mainEvents.on('START_LOADING', onStartLoading);\r\n    mainEvents.on('STOP_LOADING', onStopLoading);\r\n    mainEvents.on('RESTART', onRestart);\r\n\r\n    return () => {\r\n      mainEvents.off('START_LOADING', onStartLoading);\r\n      mainEvents.off('STOP_LOADING', onStopLoading);\r\n      mainEvents.off('RESTART', onRestart);\r\n    };\r\n  }, []);\r\n};","import { useEffect, useState } from 'react';\r\nimport './style.css';\r\n\r\ninterface PopupTextProps {\r\n  text: string;\r\n  onComplete?: () => void;\r\n  duration?: number;\r\n  position?: { x: string; y: string };\r\n  rotation?: number;\r\n  initialFontSize?: number;\r\n  finalFontSize?: number;\r\n  color1?: string;\r\n  color2?: string;\r\n  color3?: string;\r\n}\r\n\r\nexport const PopupText: React.FC<PopupTextProps> = ({\r\n  text,\r\n  onComplete,\r\n  duration = 3000,\r\n  position = { x: '50%', y: '50%' },\r\n  rotation = 0,\r\n  initialFontSize = 50,\r\n  finalFontSize = 100,\r\n  color1 = 'white',\r\n  color2 = 'red',\r\n  color3 = 'yellow' \r\n}) => {\r\n  const [isVisible, setIsVisible] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setIsVisible(false);\r\n      if (onComplete) onComplete();\r\n    }, duration);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [onComplete, duration]);\r\n\r\n  if (!isVisible) return null;\r\n\r\n  const style = {\r\n    '--duration': `${duration}ms`,\r\n    '--rotation': `${rotation}deg`,\r\n    '--position-x': position.x,\r\n    '--position-y': position.y,\r\n    '--initial-font-size': `${initialFontSize}px`,\r\n    '--final-font-size': `${finalFontSize}px`,\r\n    '--color1': color1,\r\n    '--color2': color2,\r\n    '--color3': color3,\r\n  } as React.CSSProperties;\r\n\r\n  return (\r\n    <div className=\"popup-text\" style={style}>\r\n      {text}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PopupText;","import { useState } from 'react';\r\nimport { PopupText } from '@/components/UI/PopupText';\r\n\r\nexport const usePopup = () => {\r\n  const [popupComponents, setPopupComponents] = useState<{node: React.ReactNode, id: number}[]>([]);\r\n\r\n  const showPopup = (\r\n    text: string,   \r\n    duration?: number,\r\n    position?: { x: string; y: string },\r\n    rotation?: number,\r\n    initialFontSize?: number,\r\n    finalFontSize?: number,\r\n    color1?: string,\r\n    color2?: string,\r\n    color3?: string,\r\n  ) => {\r\n    const id = Date.now() + Math.random();\r\n    \r\n    const popup = (\r\n      <PopupText\r\n        key={id}\r\n        text={text}\r\n        onComplete={() => {\r\n          setPopupComponents(prev => prev.filter(p  => p.id !== id));\r\n        }}\r\n        duration={duration}\r\n        position={position}\r\n        rotation={rotation}\r\n        initialFontSize={initialFontSize}\r\n        finalFontSize={finalFontSize}\r\n        color1={color1}\r\n        color2={color2}\r\n        color3={color3}\r\n      />\r\n    );\r\n\r\n    setPopupComponents(prev => [...prev, {node: popup, id}]);\r\n  };\r\n\r\n  return { showPopup, popups: popupComponents.map(p => p.node) }\r\n};","import './style.css';\r\n\r\nexport const Panel: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n    return (\r\n        <div className=\"panel-container overlay\">\r\n            <div className=\"panel icon\">\r\n                <div className=\"panel_content\">\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { Panel } from '@/components/UI/Panel';\r\nimport './style.css';\r\n\r\nexport const GameOverScreen: React.FC = () => {\r\n  return (\r\n    <div className=\"game-over-screen_container overlay\">\r\n        <Panel>\r\n          <div className=\"game-over-screen_death-image icon\"></div>\r\n          <div className=\"game-over-screen_content\">\r\n            <div className=\"game-over-screen_frame icon\">\r\n              <h2 className=\"game-over-screen_label\">Поражение</h2>\r\n            </div>\r\n            <p className=\"game-over-screen_hint\">Нажми любую клавишу чтобы начать сначала</p>\r\n          </div>\r\n        </Panel>\r\n    </div>\r\n  );\r\n};","import { Panel } from '@/components/UI/Panel';\r\nimport './style.css';\r\n\r\nexport const PauseScreen: React.FC = () => {\r\n  return (\r\n    <Panel>\r\n      <div className=\"pause-screen_slime icon\"></div>\r\n      <div className=\"pause-screen_content\">\r\n        <div className=\"pause-screen_pause-icon icon\"></div>\r\n        <h2 className=\"pause-screen_label\">пауза</h2>\r\n        <p className=\"pause-screen_hint\">Нажми любую клавишу чтобы продолжить</p>\r\n      </div>\r\n    </Panel>\r\n  );\r\n};","import './style.css';\r\nimport { useGameStore } from '@/stores';\r\n\r\nexport const ScoreSystem: React.FC = () => {\r\n    const {\r\n        score\r\n    } = useGameStore()\r\n\r\n    return (\r\n        <div className=\"score-container\">\r\n            <div className=\"score image\">\r\n                <p>{score}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};","import './style.css';\r\n\r\nexport const StartScreenHint: React.FC = () => {\r\n  return (\r\n    <div className=\"start-screen-hint overlay\">\r\n      <div className=\"start-screen-hint_tutorial icon\"></div>\r\n      <h3 className=\"start-screen-hint_label hint\">\r\n        Нажми любую клавишу чтобы играть\r\n      </h3>\r\n    </div>\r\n  );\r\n};","export function randomInt(min: number, max: number) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}","import { useEffect } from 'react'\r\nimport { gameEvents } from '@/GameEvents'\r\nimport { useGameStore } from '@/stores'\r\nimport { usePopup } from '@/hooks'\r\nimport { randomInt } from '@/utils/math'\r\n\r\nexport const GameEventsVisualizer: React.FC = () => {\r\n    const { gameInstance } = useGameStore();\r\n    const { showPopup, popups } = usePopup();\r\n\r\n    useEffect(() => {\r\n        if (!gameInstance) return;\r\n\r\n        const onScoreChange = (value: number, position?: {x: number, y: number}, difference?: number) => {\r\n            if (!position || !difference) return;\r\n\r\n            const [x, y] = Object.values(position).map(\r\n                coordinate => `${\r\n                    Math.round(coordinate * gameInstance.scale.zoom)\r\n                }px`\r\n            );\r\n\r\n            const color = difference < 0 ? \"rgb(255, 75, 75)\" : '#f2d53b';\r\n            const sign = difference < 0 ? '' : '+';  \r\n\r\n            showPopup(\r\n                sign + difference.toString(),\r\n                700,\r\n                {x, y},\r\n                randomInt(-8, 8),\r\n                Math.min(window.innerWidth * 20 / 318, window.innerHeight * 20 / 500),\r\n                Math.min(window.innerWidth * 25 / 318, window.innerHeight * 25 / 500),\r\n                color,\r\n                color,\r\n                color\r\n            )\r\n        }\r\n\r\n        const onCharacterTookDamage = (position: {x: number, y: number}) => {\r\n            const [x, y] = Object.values(position).map(\r\n                coordinate => `${\r\n                    Math.round(coordinate * gameInstance.scale.zoom)\r\n                }px`\r\n            );\r\n\r\n            showPopup(\r\n                'ой',\r\n                700,\r\n                {x, y},\r\n                randomInt(-8, 8),\r\n                Math.min(window.innerWidth * 20 / 318, window.innerHeight * 20 / 500),\r\n                Math.min(window.innerWidth * 25 / 318, window.innerHeight * 25 / 500),\r\n                \"rgb(255, 75, 75)\",\r\n                \"white\",\r\n                \"rgb(255, 75, 75)\"\r\n            )\r\n        }\r\n\r\n        // const onComboReset = () => {\r\n        //      showPopup(\r\n        //         'Срос комбо',\r\n        //         1000,\r\n        //         { x: '50%', y: '20%' },\r\n        //         randomInt(-10, 10),\r\n        //         Math.min(window.innerWidth * 40 / 318, window.innerHeight * 40 / 500),\r\n        //         Math.min(window.innerWidth * 32 / 318, window.innerHeight * 32 / 500),\r\n        //         'red',\r\n        //         'white',\r\n        //         'red'\r\n        //     );\r\n        // }\r\n\r\n        // const onMultipleKill = (multiplier: number, position: {x: number, y: number}) => {\r\n        //     const [x, y] = Object.values(position).map(coordinate => `${Math.round(coordinate * gameInstance.scale.zoom)}px`);\r\n\r\n        //     showPopup(\r\n        //         `x${multiplier}`,\r\n        //         500,\r\n        //         {x, y},\r\n        //         undefined,\r\n        //         Math.min(window.innerWidth * 30 / 318, window.innerHeight * 30 / 500),\r\n        //         Math.min(window.innerWidth * 40 / 318, window.innerHeight * 40 / 500),\r\n        //         '#f2d53b',\r\n        //         '#f2d53b',\r\n        //         '#f2d53b'\r\n        //     )\r\n        // }\r\n\r\n\r\n\r\n        // gameEvents.on('MULTIPLE_KILL', onMultipleKill);\r\n        gameEvents.on('CHANGE_SCORE', onScoreChange)\r\n        gameEvents.on('CHARACTER_TOOK_DAMAGE', onCharacterTookDamage)\r\n        // gameEvents.on('COMBO_RESET', onComboReset)\r\n\r\n        return () => {\r\n            // gameEvents.off('MULTIPLE_KILL', onMultipleKill)\r\n            gameEvents.off('CHANGE_SCORE', onScoreChange)\r\n            gameEvents.off('CHARACTER_TOOK_DAMAGE', onCharacterTookDamage)\r\n            // gameEvents.off('COMBO_RESET', onComboReset)\r\n        }\r\n    }, [gameInstance])\r\n\r\n    return (\r\n        <>\r\n            {popups}\r\n        </>\r\n    )\r\n}","import './style.css'\r\n\r\nexport const VictoryScreen: React.FC = () => {\r\n    return (\r\n        <div className=\"victory-screen overlay\">\r\n            <div className=\"victory-screen_content\">\r\n                <div className=\"victory-screen_text icon\"></div>\r\n                <div className=\"victory-screen_slime icon\"></div>\r\n                <p className=\"victory-screen_hint hint\">Нажми ЛКМ или R, чтобы начать сначала</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useGameStore } from \"@/stores\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport './style.css';\r\nimport { usePopup } from \"@/hooks\";\r\nimport { randomInt } from \"@/utils/math\";\r\n\r\nexport const WaveSystem: React.FC = () => {\r\n    const { \r\n        currentWave, \r\n        waveCount \r\n    } = useGameStore();\r\n    const lastWave = useRef(currentWave);\r\n\r\n    const { showPopup, popups } = usePopup();\r\n\r\n    useEffect(() => {\r\n        if (currentWave > lastWave.current && currentWave !== waveCount) {\r\n            lastWave.current = currentWave;\r\n            showPopup(\r\n                `Волна ${currentWave}\\nпройдена!`,\r\n                1600,\r\n                { x: '50%', y: '50%' },\r\n                randomInt(-15, 15),\r\n                Math.min(window.innerWidth * 0.094, window.innerHeight * 0.06),\r\n                Math.min(window.innerWidth * 0.188, window.innerHeight * 0.12)\r\n            );\r\n            return;\r\n        }\r\n        if (currentWave === 0) {\r\n            lastWave.current = 0;\r\n        }\r\n    }, [currentWave])\r\n\r\n    return (\r\n        <div className=\"wave-system overlay\">\r\n            <p className=\"current-wave\">{`${currentWave}/${waveCount}`}</p>\r\n            {popups}\r\n        </div>\r\n    )\r\n}","import { useGameStore } from \"@/stores/gameStore\";\r\nimport { WaveSystem, StartScreenHint, PauseScreen, GameOverScreen, ScoreSystem, VictoryScreen, GameEventsVisualizer } from \"./overlays\";\r\nimport './style.css';\r\n\r\nexport const GameOverlayManager = () => {\r\n  const { \r\n    victory, \r\n    pause, \r\n    gameOver, \r\n    startPlaying \r\n  } = useGameStore();\r\n\r\n  return (\r\n    <div className=\"game-overlay overlay\">\r\n      {victory && <VictoryScreen />}\r\n      {!startPlaying && <StartScreenHint />}\r\n      {pause && <PauseScreen />}\r\n      {gameOver && <GameOverScreen />}\r\n      <ScoreSystem />\r\n      <WaveSystem />\r\n      <GameEventsVisualizer />\r\n    </div>\r\n  );\r\n};","import { MainMenu } from '@/components/MainMenu';\r\nimport { Loader } from '@/components/Loader';\r\nimport { useGameStore } from '@/stores';\r\nimport { useInputHandlers, useMainEvents, useGameEvents, usePopup, useResizeObserver } from '@/hooks';\r\nimport { GameOverlayManager } from '@/components/gameOverlays';\r\nimport '@/styles/global.css';\r\nimport '@/styles/ui.css';\r\nimport { useCallback, useEffect, useRef } from 'react';\r\n\r\nexport const App = () => {\r\n  const {\r\n    gameStarted,\r\n    showLoader,\r\n    showMainMenu,\r\n    gameInstance\r\n  } = useGameStore();\r\n\r\n  const gameContainerRef = useRef<HTMLDivElement>(null);\r\n\r\n  useGameEvents();\r\n  useMainEvents();\r\n  useInputHandlers();\r\n\r\n  useEffect(() => {\r\n    const descriptionWasChecked = localStorage.getItem('description-checked');\r\n\r\n    const parsedLocalStorageItem = descriptionWasChecked && JSON.parse(descriptionWasChecked);\r\n    !parsedLocalStorageItem && useGameStore.setState({ descriptionChecked: false });\r\n  }, [])\r\n\r\n  const changeSizeOfGame = useCallback((width: number, height: number) => {\r\n    setTimeout(() => {\r\n      if (!gameInstance) return;\r\n\r\n      const gameWidth = 318;\r\n      const gameHeight = 500;\r\n\r\n      const targetWidthZoom = width / gameWidth;\r\n      const targetHeightZoom = height / gameHeight\r\n\r\n      gameInstance.scale.setZoom(Math.min(targetHeightZoom, targetWidthZoom))\r\n    }, 100)\r\n  }, [gameInstance])\r\n\r\n  useResizeObserver((entry) => {\r\n    const { width, height } = entry.contentRect;\r\n    changeSizeOfGame(width, height)\r\n  }, gameContainerRef)\r\n\r\n  return (\r\n    <div className=\"app_container\">\r\n      <div className=\"app\" id=\"game-container\" ref={gameContainerRef}>\r\n        {gameStarted && <GameOverlayManager />}\r\n        {showMainMenu && <MainMenu />}\r\n        {showLoader && <Loader />}\r\n        <div style={{display: !showLoader && gameStarted ? 'block' : 'none'}} className=\"game-container_frame image\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};","// hooks/useGameEvents.ts\r\nimport { useEffect } from 'react';\r\nimport { gameEvents } from '@/GameEvents';\r\nimport { useGameStore } from '@/stores';\r\n\r\nexport const useGameEvents = () => {\r\n  const { resetGameState, setScore } = useGameStore();\r\n\r\n  useEffect(() => {\r\n    const onWaveComplete = () => {\r\n        useGameStore.setState(prev => ({ currentWave: prev.currentWave + 1 }))\r\n    };\r\n    const onGameStarted = (restarted: boolean, currentWaveCount: number) => {\r\n      if (!restarted) {\r\n        useGameStore.setState({ \r\n          gameStarted: true,\r\n          waveCount: currentWaveCount \r\n        });\r\n      }\r\n      resetGameState();\r\n    };\r\n    const onGameOver = () => useGameStore.setState({ gameOver: true });\r\n    const onVictory = () => useGameStore.setState({ victory: true });\r\n    const onChangeScore = (score: number) => setScore(score);\r\n\r\n    gameEvents.on(\"WAVE_COMPLETE\", onWaveComplete);\r\n    gameEvents.on(\"GAME_STARTED\", onGameStarted);\r\n    gameEvents.on(\"GAME_OVER\", onGameOver);\r\n    gameEvents.on(\"VICTORY\", onVictory);\r\n    gameEvents.on(\"CHANGE_SCORE\", onChangeScore);\r\n\r\n    return () => {\r\n      gameEvents.off(\"WAVE_COMPLETE\", onWaveComplete);\r\n      gameEvents.off(\"GAME_STARTED\", onGameStarted);\r\n      gameEvents.off(\"GAME_OVER\", onGameOver);\r\n      gameEvents.off(\"VICTORY\", onVictory);\r\n      gameEvents.off(\"CHANGE_SCORE\", onChangeScore);\r\n    };\r\n  }, [resetGameState, setScore]);\r\n};","// hooks/useInputHandlers.ts\r\nimport { useEffect } from 'react';\r\nimport { mainEvents } from '@/MainEvents';\r\nimport { useGameStore } from '@/stores/gameStore';\r\n\r\nexport const useInputHandlers = () => {\r\n  const { startPlaying, pause, gameOver, victory, resetGameState, showLoader } = useGameStore();\r\n\r\n  useEffect(() => {\r\n    const handleStartPlaying = (event: KeyboardEvent | MouseEvent) => {\r\n      if (!startPlaying && !showLoader) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        useGameStore.setState({ startPlaying: true });\r\n        mainEvents.emit(\"START_PLAYING\");\r\n        document.removeEventListener('keydown', handleStartPlaying);\r\n        document.removeEventListener('click', handleStartPlaying);\r\n      }\r\n    };\r\n\r\n    if (!startPlaying && !showLoader) {\r\n      document.addEventListener('keydown', handleStartPlaying);\r\n      document.addEventListener('click', handleStartPlaying);\r\n    }\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handleStartPlaying);\r\n      document.removeEventListener('click', handleStartPlaying);\r\n    };\r\n  }, [startPlaying, showLoader]);\r\n\r\n  useEffect(() => {\r\n    const handlePauseEvents = () => {\r\n      if (!gameOver && startPlaying) {\r\n        useGameStore.setState({ pause: true });\r\n        mainEvents.emit(\"PAUSE\");\r\n      }\r\n    };\r\n\r\n    const handleEscape = (e: KeyboardEvent) => {\r\n      if (e.key === 'Escape' && !gameOver && startPlaying) {\r\n        useGameStore.setState(prev => {\r\n          const newPause = !prev.pause;\r\n          mainEvents.emit(newPause ? \"PAUSE\" : \"RESUME\");\r\n          return { pause: newPause };\r\n        });\r\n      }\r\n    };\r\n\r\n    const handleResume = (e: KeyboardEvent | MouseEvent) => {\r\n      if (pause) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        useGameStore.setState({ pause: false });\r\n        mainEvents.emit(\"RESUME\");\r\n      }\r\n    };\r\n\r\n    window.addEventListener('blur', handlePauseEvents);\r\n    window.addEventListener('contextmenu', handlePauseEvents);\r\n    document.addEventListener('keydown', handleEscape);\r\n    document.addEventListener('keydown', handleResume);\r\n    document.addEventListener('click', handleResume);\r\n\r\n    return () => {\r\n      window.removeEventListener('blur', handlePauseEvents);\r\n      window.removeEventListener('contextmenu', handlePauseEvents);\r\n      document.removeEventListener('keydown', handleEscape);\r\n      document.removeEventListener('keydown', handleResume);\r\n      document.removeEventListener('click', handleResume);\r\n    };\r\n  }, [pause, gameOver, startPlaying]);\r\n\r\n  useEffect(() => {\r\n    const handleRestart = (e: MouseEvent | KeyboardEvent) => {\r\n      if (gameOver && !pause) {\r\n        resetGameState();\r\n        mainEvents.emit(\"RESTART\");\r\n        return;\r\n      }\r\n      if (victory && !pause) {\r\n        if (e instanceof KeyboardEvent) {\r\n          if (e.code !== 'KeyR') return;\r\n        }\r\n        resetGameState();\r\n        mainEvents.emit(\"RESTART\");\r\n      }\r\n    };\r\n\r\n    if (gameOver || victory && !pause) {\r\n      document.addEventListener('click', handleRestart);\r\n      document.addEventListener('keydown', handleRestart);\r\n    }\r\n\r\n    return () => {\r\n      document.removeEventListener('click', handleRestart);\r\n      document.removeEventListener('keydown', handleRestart);\r\n    };\r\n  }, [gameOver, victory, resetGameState, pause]);\r\n};","import { useEffect } from 'react';\r\n\r\nexport const useResizeObserver = (callback: (entry: ResizeObserverEntry) => void, elementRef: React.RefObject<HTMLElement | null>) => {\r\n  useEffect(() => {\r\n    const element = elementRef.current;\r\n    if (!element) return;\r\n\r\n    const observer = new ResizeObserver((entries) => {\r\n      callback(entries[0]);\r\n    });\r\n\r\n    observer.observe(element);\r\n    return () => observer.disconnect();\r\n  }, [callback, elementRef]);\r\n};","import 'core-js/stable';\r\nimport 'regenerator-runtime/runtime';\r\nimport { createRoot } from 'react-dom/client';\r\nimport { App } from './App';\r\nimport React from 'react';\r\nconst root = createRoot(document.getElementById('root')!);\r\nroot.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n)","import { EventEmitter } from 'events';\r\n\r\ninterface IMainEvents {\r\n  START_LOADING: () => void;\r\n  STOP_LOADING: () => void;\r\n  START_PLAYING: () => void;\r\n  PAUSE: () => void;\r\n  RESUME: () => void;\r\n  RESTART: () => void;\r\n}\r\n\r\nclass TypedEventEmitter extends EventEmitter {\r\n  emit<T extends keyof IMainEvents>(event: T, ...args: Parameters<IMainEvents[T]>): boolean {\r\n    return super.emit(event as string, ...args);\r\n  }\r\n\r\n  on<T extends keyof IMainEvents>(event: T, listener: IMainEvents[T]): this {\r\n    return super.on(event as string, listener);\r\n  }\r\n\r\n  off<T extends keyof IMainEvents>(event: T, listener: IMainEvents[T]): this {\r\n    return super.off(event as string, listener);\r\n  }\r\n}\r\n\r\nexport const mainEvents = new TypedEventEmitter();\r\n\r\nexport { EventEmitter };\r\n","import { EventEmitter } from \"events\";\r\n\r\ninterface GameEvents {\r\n  LOAD_STARTED: () => void;\r\n  LOAD_PROGRESS: (progress: number) => void;\r\n  GAME_STARTED: (restarted: boolean, waveCount: number) => void;\r\n  GAME_OVER: () => void;\r\n  CHANGE_SCORE: (value: number, position?: {x: number, y: number}, scoreDifference?: number) => void;\r\n  WAVE_COMPLETE: () => void;\r\n  VICTORY: () => void;\r\n  MULTIPLE_KILL: (multiplier: number, position: {x: number, y: number}) => void;\r\n  COMBO_RESET: () => void;\r\n  CHARACTER_TOOK_DAMAGE: (position: {x: number, y: number}) => void;\r\n}\r\n\r\nclass TypedEventEmitter extends EventEmitter {\r\n  emit<T extends keyof GameEvents>(event: T, ...args: Parameters<GameEvents[T]>): boolean {\r\n    return super.emit(event as string, ...args);\r\n  }\r\n\r\n  on<T extends keyof GameEvents>(event: T, listener: GameEvents[T]): this {\r\n    return super.on(event as string, listener);\r\n  }\r\n\r\n  off<T extends keyof GameEvents>(event: T, listener: GameEvents[T]): this {\r\n    return super.off(event as string, listener);\r\n  }\r\n}\r\n\r\nexport const gameEvents = new TypedEventEmitter();"],"names":["CustomScrollbar","_ref","_contentRef$current","_contentRef$current2","_sliderContainerRef$c","contentRef","sliderRef","useRef","sliderContainerRef","_useState2","_slicedToArray","useState","isDragging","setIsDragging","_useState4","startY","setStartY","_useState6","sliderTop","setSliderTop","canScroll","updateScrollbar","current","content","maxTop","clientHeight","newTop","scrollTop","scrollHeight","style","top","concat","useEffect","console","log","handleMouseMove","e","container","clientY","getBoundingClientRect","Math","max","min","scrollRatio","handleMouseUp","document","addEventListener","removeEventListener","_contentRef$current3","_contentRef$current4","_jsx","ref","className","children","onMouseDown","_sliderRef$current","preventDefault","ModalContent","title","onBack","_jsxs","onClick","viewBox","d","Post","postComponents","_defineProperty","hello","_Fragment","href","target","version054","credits","marginTop","menuItems","id","InformationPanel","PostComponent","visible","setVisible","currentPost","setCurrentPost","map","item","useGameStore","create","set","gameStarted","showLoader","showMainMenu","victory","waveCount","pause","gameOver","startPlaying","currentWave","score","gameInstance","descriptionChecked","resetGameState","setScore","MainMenu","store","informationVisible","setInformationVisible","sleepingSlimeStatus","setSleepingSlimeStatus","playButtonRef","playButtonSVGRef","playButtonClicked","prev","localStorage","setItem","JSON","stringify","setState","_playButtonSVGRef$cur","disabled","classList","remove","setTimeout","mainEvents","emit","_regeneratorRuntime","r","t","Object","prototype","n","hasOwnProperty","o","Symbol","i","iterator","a","asyncIterator","u","toStringTag","c","defineProperty","value","enumerable","configurable","writable","h","Generator","Error","done","method","arg","delegate","f","sent","_sent","dispatchException","abrupt","s","type","Context","call","wrap","GeneratorFunction","GeneratorFunctionPrototype","l","p","getPrototypeOf","y","x","v","g","forEach","_invoke","AsyncIterator","_typeof","resolve","__await","then","TypeError","next","w","tryEntries","push","m","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","unshift","pop","values","charAt","slice","stop","rval","complete","finish","delegateYield","asyncGeneratorStep","Array","isArray","_arrayWithHoles","_iterableToArrayLimit","_arrayLikeToArray","toString","from","test","_unsupportedIterableToArray","_nonIterableRest","Loader","loaderRef","barRef","slimeRef","smokeRef","displayProgress","setDisplayProgress","realProgress","setRealProgress","animationRef","startTimeRef","assetsLoaded","setAssetsLoaded","_useState8","gameLoaded","setGameLoaded","_useState0","maxTranslate","setMaxTranslate","minimumDuration","updateMaxTranslate","newMaxTranslate","clientWidth","window","elapsed","Date","now","remainingTime","_loaderRef$current","_loaderRef$current2","add","cancelAnimationFrame","animateProgress","progressRatio","targetProgress","smoothProgress","combinedProgress","currentProgress","translateX","transform","requestAnimationFrame","onLoadProgressEvent","progress","onGameStartedEvent","preloadAssets","_callee","_context","preloadResources","tutorial","victoryLabel","t0","error","arguments","apply","_next","_throw","gameEvents","on","off","useMainEvents","onStartLoading","_yield$import","initGame","game","onStopLoading","onRestart","getState","PopupText","text","onComplete","_ref$duration","duration","_ref$position","position","_ref$rotation","rotation","_ref$initialFontSize","initialFontSize","_ref$finalFontSize","finalFontSize","_ref$color","color1","_ref$color2","color2","_ref$color3","color3","isVisible","setIsVisible","timer","clearTimeout","usePopup","popupComponents","setPopupComponents","showPopup","random","popup","filter","_toConsumableArray","node","popups","Panel","GameOverScreen","PauseScreen","ScoreSystem","StartScreenHint","randomInt","floor","GameEventsVisualizer","_usePopup","onScoreChange","difference","_Object$values$map2","coordinate","round","scale","zoom","color","innerWidth","innerHeight","onCharacterTookDamage","_Object$values$map4","VictoryScreen","WaveSystem","_useGameStore","lastWave","GameOverlayManager","App","gameContainerRef","onWaveComplete","onGameStarted","restarted","currentWaveCount","onGameOver","onVictory","onChangeScore","useGameEvents","handleStartPlaying","event","stopPropagation","handlePauseEvents","handleEscape","key","newPause","handleResume","handleRestart","KeyboardEvent","code","useInputHandlers","descriptionWasChecked","getItem","parse","callback","elementRef","changeSizeOfGame","useCallback","width","height","targetWidthZoom","targetHeightZoom","setZoom","entry","_entry$contentRect","contentRect","element","observer","ResizeObserver","entries","observe","disconnect","display","createRoot","getElementById","render","React","_EventEmitter","TypedEventEmitter","_classCallCheck","_callSuper","_inherits","_len","args","_key","_superPropGet","listener","EventEmitter"],"sourceRoot":""}